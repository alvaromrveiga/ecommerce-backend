# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run automated tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ecommerce-test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Create .env.test
        run: |
          touch .env.test
          echo DATABASE_URL="postgresql://postgres:postgres@localhost:5432/ecommerce-test?schema=public" >> .env.test
          echo ACCESS_JWT_SECRET="Git#Hub1Actions2Secret3" >> .env.test
          echo REFRESH_JWT_SECRET="Git#Hub1Actions2Refresh3Secret4" >> .env.test
          cat .env.test

      - run: npm install
      - run: npm run build
      - run: npm run migrate:test
      - run: npm run test:all
